{"version":3,"file":"js/app.64400ef3.js","mappings":"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","sources":["webpack://type-word/./src/App.vue","webpack://type-word/./src/App.vue?7ccd","webpack://type-word/./src/main.js","webpack://type-word/webpack/bootstrap","webpack://type-word/webpack/runtime/chunk loaded","webpack://type-word/webpack/runtime/compat get default export","webpack://type-word/webpack/runtime/define property getters","webpack://type-word/webpack/runtime/global","webpack://type-word/webpack/runtime/hasOwnProperty shorthand","webpack://type-word/webpack/runtime/jsonp chunk loading","webpack://type-word/webpack/startup"],"sourcesContent":["<template>\n  <!-- 新增的最外层容器，设置自适应屏幕大小-->\n  <div class=\"outer-container\">\n    <!-- 新增的控制box，用于放置el-dropdown和模式切换相关组件 -->\n    <div class=\"control-box\">\n      <!-- el-dropdown组件，用于菜单按钮 -->\n      <el-dropdown placement=\"top-start\">\n        <el-button @click=\"toggleDropdown\" @mouseenter=\"showDropdownOnHover\"\n          @mouseleave=\"hideDropdownOnLeave\">菜单</el-button>\n        <template #dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item>\n              <p @click=\"handleFileUpload\">上传</p>\n              <input type=\"file\" ref=\"fileInput\" style=\"display: none\" accept=\".txt\" />\n            </el-dropdown-item>\n            <el-dropdown-item @click=\"showDialog\">\n              词库\n            </el-dropdown-item>\n            <el-dropdown-item @click=\"handleEndClick\">结束</el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n      <!-- 模式切换相关组件，使用el-radio-group和el-radio实现 -->\n      <el-tooltip effect=\"dark\" content=\"选择测试模式，注意这会重新载入单词\" placement=\"top\">\n        <el-radio-group v-model=\"showMode\" @change=\"handleShowModeChange\">\n          <el-radio :label=\"0\">顺序</el-radio>\n          <el-radio :label=\"1\">乱序</el-radio>\n          <el-radio :label=\"2\">A-Z排序</el-radio>\n        </el-radio-group>\n      </el-tooltip>\n    </div>\n    <div class=\"page-wrapper\">\n      <el-card class=\"main-card\">\n        <el-container>\n          <el-header class=\"header\">\n            <h1>TEST YOUR WORDS</h1>\n          </el-header>\n          <el-main class=\"main-content\">\n            <div class=\"mean-box\">\n              <p>{{ currentChineseMeaning }}</p>\n            </div>\n            <input placeholder=\"Type the English word here\" :value=\"inputValue\" @input=\"handleInput\" class=\"english-input\"\n              v-if=\"isFileUploaded\" @keydown.enter=\"checkWord\" :style=\"{ display: inputBoxVisible ? 'block' : 'none' }\" />\n            <el-tooltip effect=\"light\" content=\"下载错误单词本\" placement=\"top\">\n              <el-button v-if=\"downloadButtonVisible\" type=\"success\" @click=\"downloadWords\">下载</el-button>\n            </el-tooltip>\n          </el-main>\n          <el-footer class=\"footer\">\n            <div class=\"progress-bar-wrapper\">\n              <div class=\"progress-bar-container\">\n                <div class=\"progress-bar\" :style=\"{ width: progressWidth }\"></div>\n              </div>\n              <div class=\"progress-text\">{{ completedWords }} / {{ totalWords }}</div>\n            </div>\n          </el-footer>\n        </el-container>\n      </el-card>\n    </div>\n\n    <!-- el-dialog组件，用于显示弹出的对话框 -->\n    <el-dialog title=\"新概念词库\" v-model=\"dialogVisible\">\n      <ul class=\"dialog-list\">\n        <li @click=\"handleListItemClick('nce1')\">新概念第1册</li>\n        <li @click=\"handleListItemClick('nce2')\">新概念第2册</li>\n        <li @click=\"handleListItemClick('nce3')\">新概念第3册</li>\n        <li @click=\"handleListItemClick('nce4')\">新概念第4册</li>\n      </ul>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue';\nimport { ElButton, ElTooltip, ElMessage, ElRadioGroup, ElRadio } from 'element-plus';\n\nconst inputValue = ref('');\nconst currentChineseMeaning = ref('请上传单词本开始');\nconst wordDictionary = ref([]); // 初始化为数组\nconst usedWords = ref([]);\nconst fileInput = ref(null);\nconst isFileUploaded = ref(false);\nconst wrongCount = ref(0);\nconst recordedWords = ref([]);\nconst inputBoxVisible = ref(true);\nconst progressWidth = ref('0%');\nconst totalWords = ref(0);\nconst completedWords = ref(0);\nconst downloadButtonVisible = ref(false);\n// 新增响应式数据，用于记录展示模式，0表示顺序，1表示乱序，2表示A-Z排序，默认乱序\nconst showMode = ref(1);\n// 新增响应式数据，用于存储按当前模式排好序的单词列表\nconst sortedWordList = ref([]);\n// 新增响应式数据，用于控制对话框显示隐藏\nconst dialogVisible = ref(false);\nconst currentWordBook = ref('words.txt');\n\nconst handleFileUpload = () => {\n  fileInput.value.click();\n};\n\nconst handleFileSelected = (e) => {\n  const file = e.target.files[0];\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const content = event.target.result;\n      const lines = content.split('\\n');\n      const dictionary = [];\n      lines.forEach((line) => {\n        const [word, meaning] = line.split('|');\n        if (word && meaning) {\n          dictionary.push({ word: word.trim(), meaning: meaning.trim() });\n        }\n      });\n      wordDictionary.value = dictionary;\n      totalWords.value = dictionary.length;\n      // 重置已完成单词数\n      completedWords.value = 0;\n      // 重置错误计数\n      wrongCount.value = 0;\n      // 清空已使用单词列表和记录的单词列表，当作全新开始\n      usedWords.value = [];\n      recordedWords.value = [];\n      // 重置进度条宽度\n      progressWidth.value = '0%';\n      inputBoxVisible.value = true;\n      downloadButtonVisible.value = false;\n      sortWordList(); // 按当前模式排序\n      showRandomWord();\n      isFileUploaded.value = true;\n    };\n    reader.readAsText(file);\n  }\n};\n\n\n// 新增方法，用于根据当前展示模式对单词列表进行排序\nconst sortWordList = () => {\n  const words = wordDictionary.value;\n  switch (showMode.value) {\n    case 0: // 顺序模式\n      sortedWordList.value = words.slice();\n      break;\n    case 1: // 乱序模式\n      sortedWordList.value = words.slice().sort(() => Math.random() - 0.5);\n      break;\n    case 2: // A-Z排序模式\n      sortedWordList.value = words.slice().sort((a, b) => a.word.localeCompare(b.word));\n      break;\n  }\n};\n\nconst handleEndClick = () => {\n  if (completedWords.value === 0) {\n    ElMessage({\n      message: `你还未开始测试！`,\n      type: 'info',\n      duration: 3000\n    });\n  } else {\n    const completedNum = completedWords.value;\n    const errors = recordedWords.value.length;\n    const accuracy = ((completedNum - errors) / completedNum * 100).toFixed(2);\n    currentChineseMeaning.value = `测试结束，本次测试单词数：${completedNum}，错误单词数：${errors}，正确率：${accuracy}%`;\n    inputBoxVisible.value = false;\n    downloadButtonVisible.value = recordedWords.value.length > 0; // 确保有错误单词时显示下载按钮\n  }\n};\n\n// 修改showRandomWord方法，直接从排好序的单词列表中按顺序取单词展示\nconst showRandomWord = () => {\n  if (sortedWordList.value.length === 0) {\n    if (wordDictionary.value.length === 0) {\n      currentChineseMeaning.value = '单词本为空，请重新上传有效文件';\n    } else {\n      if (recordedWords.value.length === 0) {\n        ElMessage({\n          message: '卧槽，文曲星下凡，一个都没错！',\n          grouping: true,\n          type: 'success',\n        });\n      }\n      const completedNum = completedWords.value + 1;\n      const errors = recordedWords.value.length;\n      const accuracy = ((completedNum - errors) / completedNum * 100).toFixed(2);\n      currentChineseMeaning.value = `测试完成，本次测试单词数：${completedNum}，错误单词数：${errors}，正确率：${accuracy}%`;\n      inputBoxVisible.value = false;\n      progressWidth.value = '100%';\n      downloadButtonVisible.value = recordedWords.value.length > 0;\n    }\n    return;\n  }\n\n  // 从已排序列表中取出下一个单词\n  const currentItem = sortedWordList.value.shift();\n\n  // 更新当前单词的中文释义\n  currentChineseMeaning.value = currentItem.meaning;\n\n  // 更新进度条\n  updateProgressBar();\n\n  // 重置错误计数\n  wrongCount.value = 0;\n\n  console.log(`当前展示单词: ${currentItem.word}, 释义: ${currentItem.meaning}`);\n};\n\nconst handleInput = (e) => {\n  inputValue.value = e.target.value;\n};\n\nconst checkWord = () => {\n  const inputWord = inputValue.value.trim();\n  const currentItem = wordDictionary.value.find(\n    (item) => item.meaning === currentChineseMeaning.value\n  );\n\n  if (inputWord.toLowerCase() === currentItem?.word.toLowerCase()) {\n    // 答对逻辑\n    usedWords.value.push(currentItem);\n    showRandomWord();\n    inputValue.value = '';\n    wrongCount.value = 0;\n    completedWords.value++;\n    document.querySelector('.english-input').style.color = 'red';\n  } else {\n    // 答错逻辑\n    wrongCount.value++;\n    if (wrongCount.value === 3) {\n      ElMessage({\n        message: 'Tips：按下Tab键会有奇迹哦',\n        grouping: true,\n        type: 'error',\n      });\n      document.querySelector('.english-input').style.color = 'gray';\n    } else if (wrongCount.value > 3) {\n      document.querySelector('.english-input').style.color = 'gray';\n    }\n\n    // 抖动动画\n    const englishInput = document.querySelector('.english-input');\n    if (englishInput) {\n      englishInput.classList.add('shake');\n      setTimeout(() => {\n        englishInput.classList.remove('shake');\n      }, 500);\n    }\n  }\n\n  updateProgressBar();\n};\n\n// 假设这是在setup函数内部\nconst dropdownRef = ref(null);\nconst toggleDropdown = () => {\n  dropdownRef.value && dropdownRef.value.toggleDropdown();\n};\nconst showDropdownOnHover = () => {\n  dropdownRef.value && dropdownRef.value.show();\n};\nconst hideDropdownOnLeave = () => {\n  dropdownRef.value && dropdownRef.value.hide();\n};\n\nconst downloadWords = () => {\n  const content = recordedWords.value.map(item => item).join('\\n');\n  const blob = new Blob([content], { type: 'text/plain' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'recorded_words.txt';\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\n\n\nconst updateProgressBar = () => {\n  const progressPercent = (completedWords.value / totalWords.value) * 100;\n  progressWidth.value = `${progressPercent}%`;\n};\n\n// 修改handleShowModeChange方法，重置相关变量并重新进行单词排序和展示\nconst handleShowModeChange = () => {\n  // 重置已完成单词数\n  completedWords.value = 0;\n  // 重置错误计数\n  wrongCount.value = 0;\n  // 清空已使用单词列表和记录的单词列表，当作全新开始\n  usedWords.value = [];\n  recordedWords.value = [];\n  // 重置进度条宽度\n  progressWidth.value = '0%';\n  inputBoxVisible.value = true;\n  // 重新进行单词排序\n  sortWordList();\n  showRandomWord();\n};\n\n// 新增方法，用于处理对话框里列表项的点击事件\nconst handleListItemClick = (option) => {\n  // 根据点击的选项设置对应的文件名到currentWordBook\n  if (option === 'nce1') {\n    currentWordBook.value = 'nce1-words';\n  } else if (option === 'nce2') {\n    currentWordBook.value = 'nce2_words';\n  } else if (option === 'nce3') {\n    currentWordBook.value = 'nce3_words';\n  } else if (option === 'nce4') {\n    currentWordBook.value = 'nce4_words';\n  }\n  // 重新读取对应单词书文件的数据（这里需要调整fetch的路径和文件名拼接等，以下是示例思路）\n  const filePath = `/${currentWordBook.value}.txt`;\n  fetch(filePath)\n    .then((response) => response.text())\n    .then((content) => {\n      const lines = content.split('\\n');\n      const dictionary = [];\n      lines.forEach((line) => {\n        const [word, meaning] = line.split('|');\n        dictionary.push({ word: word.trim(), meaning: meaning.trim() });\n      });\n      wordDictionary.value = dictionary;\n      totalWords.value = dictionary.length;\n      sortWordList();\n      showRandomWord();\n      isFileUploaded.value = true;\n      handleShowModeChange()\n\n    })\n    .catch(() => {\n      ElMessage({\n        message: '单词书读取失败！',\n        grouping: true,\n        type: 'error',\n      });\n    });\n  // 关闭弹出框\n  dialogVisible.value = false;\n};\n\n// 新增方法，用于显示对话框\nconst showDialog = () => {\n  dialogVisible.value = true;\n};\n\nlet keydownListener;\nonMounted(() => {\n  fileInput.value.addEventListener('change', handleFileSelected);\n  const defaultFile = '/nce1-words.txt'; // 假设文件名为words.txt，路径相对于根路径（public目录下）\n  fetch(defaultFile)\n    .then((response) => response.text())\n    .then((content) => {\n      const lines = content.split('\\n');\n      const dictionary = [];\n      lines.forEach((line) => {\n        const [word, meaning] = line.split('|');\n        dictionary.push({ word: word.trim(), meaning: meaning.trim() });\n      });\n      wordDictionary.value = dictionary;\n      totalWords.value = dictionary.length;\n      sortWordList();\n      showRandomWord();\n      isFileUploaded.value = true;\n    })\n    .catch(() => {\n      ElMessage({\n        message: '单词书读取失败！',\n        grouping: true,\n        type: 'error',\n      });\n    });\n\n  keydownListener = (e) => {\n    const englishInput = document.querySelector('.english-input');\n    if (e.key === 'Tab' && englishInput === document.activeElement) {\n      e.preventDefault();\n      const currentItem = wordDictionary.value.find(\n        (item) => item.meaning === currentChineseMeaning.value\n      );\n      if (currentItem && !recordedWords.value.some((wordInfo) => wordInfo.startsWith(currentItem.word))) {\n        inputValue.value = currentItem.word;\n        recordedWords.value.push(`${currentItem.word}|${currentItem.meaning}`);\n      }\n      // 使用nextTick确保在数据更新后设置焦点\n      nextTick(() => {\n        englishInput.focus();\n      });\n    }\n  };\n  document.addEventListener('keydown', keydownListener);\n});\n\nonBeforeUnmount(() => {\n  document.removeEventListener('keydown', keydownListener);\n});\n</script>\n\n<style scoped>\n/* 新增的最外层容器样式，设置宽高为100% */\n.outer-container {\n  width: 100%;\n  height: 100%;\n  background-color: #f4f7fc;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n/* 新增控制box的样式规则 */\n.control-box {\n  position: absolute;\n  top: 10px;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 10px;\n}\n\n/* 新增el-radio-group和el-radio的样式规则 */\n.el-radio-group {\n  display: flex;\n  gap: 10px;\n}\n\n.el-radio {\n  font-size: 14px;\n  color: #303133;\n}\n\n/* 页面整体布局相关样式 */\n.page-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n}\n\n.main-card {\n  width: 60%;\n  box-sizing: border-box;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2), 0 8px 24px rgba(0, 0, 0, 0.15), 0 12px 48px rgba(0, 0, 0, 0.1);\n  border: none;\n  transition: box-shadow 0.5s ease, transform 0.5s ease;\n  border-radius: 20px;\n  transform: scale(1);\n}\n\n.main-card:hover {\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), 0 16px 48px rgba(0, 0, 0, 0.25), 0 24px 72px rgba(0, 0, 0, 0.2);\n  transform: scale(1.01);\n}\n\n.header {\n  text-align: center;\n  padding: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #4CAF50;\n  font-weight: bold;\n  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n.main-content {\n  padding: 20px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n}\n\n.footer {\n  text-align: center;\n  padding: 30px 0;\n}\n\n.mean-box {\n  width: 80%;\n  text-align: center;\n  font-size: 50px;\n  font-family: \"KaiTi\", \"行楷\", serif;\n  padding: 20px;\n}\n\n.english-input {\n  width: 80%;\n  padding: 8px 12px;\n  border: none;\n  border-bottom: 3px solid red;\n  font-size: 50px;\n  text-align: center;\n  font-family: \"Consolas\", monospace;\n  color: red;\n  outline: none;\n}\n\n.english-input::placeholder {\n  color: rgba(128, 128, 128, 0.5);\n}\n\n.shake {\n  animation: shake 0.5s cubic-bezier(0.2, 0.1, 0.3, 1);\n}\n\n@keyframes shake {\n  0% {\n    transform: translateX(0) translateY(0);\n  }\n\n  10% {\n    transform: translateX(-5px) translateY(-2px);\n  }\n\n  20% {\n    transform: translateX(5px) translateY(2px);\n  }\n\n  30% {\n    transform: translateX(-3px) translateY(-1px);\n  }\n\n  40% {\n    transform: translateX(3px) translateY(1px);\n  }\n\n  50% {\n    transform: translateX(-2px) translateY(-0.5px);\n  }\n\n  60% {\n    transform: translateX(2px) translateY(0.5px);\n  }\n\n  70% {\n    transform: translateX(-1px) translateY(-0.3px);\n  }\n\n  80% {\n    transform: translateX(1px) translateY(0.3px);\n  }\n\n  90% {\n    transform: translateX(-0.5px) translateY(-0.1px);\n  }\n\n  100% {\n    transform: translateX(0) translateY(0);\n  }\n}\n\n.progress-bar-wrapper {\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.progress-bar-container {\n  width: 100%;\n  height: 10px;\n  background-color: #e0e0e0;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.progress-bar {\n  height: 100%;\n  background-color: #4CAF50;\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  font-size: 16px;\n  color: #333;\n  margin-top: 5px;\n}\n\n/* 媒体查询，针对小屏设备（最大宽度768px） */\n@media screen and (max-width: 768px) {\n\n  .outer-container {\n    width: 100%;\n    height: 100%;\n    background-color: #f4f7fc;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  /* 控制box在小屏下调整样式 */\n  .control-box {\n    gap: 10px;\n    padding: 10px;\n  }\n\n  /* el-card（main-card）在小屏下的样式调整 */\n  .main-card {\n    width: 90%;\n    /* 占满屏幕宽度 */\n    border-radius: 10px;\n    /* 适当缩小圆角半径 */\n  }\n\n  /* 标题部分样式调整 */\n  .header {\n    padding: 20px;\n    /* 调整内边距 */\n    font-size: 1.5rem;\n    /* 缩小字体大小 */\n  }\n\n  /* 主要内容区域样式调整 */\n  .main-content {\n    /* padding: 10px; 调整内边距 */\n    gap: 20px;\n    /* 调整元素间间距 */\n  }\n\n  /* 单词释义框样式调整 */\n  .mean-box {\n    width: 90%;\n    /* 占满宽度 */\n    font-size: 1rem;\n    /* 缩小字体大小 */\n    padding: 10px;\n    /* 调整内边距 */\n  }\n\n  /* 英文输入框样式调整 */\n  .english-input {\n    width: 90%;\n    /* 占满宽度 */\n    font-size: 1rem;\n    /* 缩小字体大小 */\n    padding: 8px;\n    /* 调整内边距 */\n    padding-top: 30px;\n  }\n\n  .progress-bar-container {\n    height: 3px;\n    overflow: hidden;\n  }\n\n  .progress-text {\n    font-size: 0.8rem;\n    /* 缩小字体大小 */\n  }\n\n  .dialog-list {\n    list-style-type: none;\n    /* 去掉默认的列表样式 */\n    padding: 0;\n    margin: 0;\n  }\n\n  .el-dialog {\n    /* width: 90% !important; */\n    /* 对话框宽度为屏幕的90% */\n    max-width: 400px;\n    /* 最大宽度为400px */\n    margin: 20px auto;\n    /* 居中 */\n    border-radius: 10px;\n    /* 保持圆角样式 */\n    padding: 10px;\n  }\n\n  .el-dialog__header {\n    font-size: 18px;\n    /* 减小标题字体大小 */\n    padding: 10px;\n    /* 减少内边距 */\n  }\n\n  .el-dialog__body {\n    font-size: 14px;\n    /* 调整正文字体大小 */\n    padding: 10px;\n    /* 减少正文的内边距 */\n    max-height: 250px;\n    /* 限制高度为250px */\n  }\n\n  .dialog-list li {\n    font-size: 16px;\n    /* 列表项字体大小略微调小 */\n    padding: 8px 10px;\n    /* 减少列表项的内外边距 */\n    margin: 5px 0;\n    /* 缩小间隔 */\n  }\n}\n\n.dialog-list {\n  list-style-type: none;\n  /* 去掉默认的列表样式 */\n  padding: 0;\n  margin: 0;\n}\n\n.dialog-list li {\n  padding: 10px 15px;\n  margin: 5px 0;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  color: #333;\n  font-size: 18px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  /* 增加过渡动画 */\n}\n\n.dialog-list li:hover {\n  background-color: #4CAF50;\n  /* 悬停时背景色变绿 */\n  color: white;\n  /* 悬停时字体颜色变白 */\n  transform: scale(1.05);\n  /* 悬停时略微放大 */\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  /* 增加阴影效果 */\n}\n\n.el-dialog {\n  border-radius: 10px;\n  /* 对话框整体增加圆角 */\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);\n  /* 增加阴影效果 */\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  /* 弹出动画效果 */\n}\n\n.el-dialog__header {\n  font-size: 20px;\n  /* 增加标题的字体大小 */\n  font-weight: bold;\n  /* 标题加粗 */\n  text-align: center;\n  /* 标题居中 */\n  background-color: #4CAF50;\n  /* 标题背景色为绿色 */\n  color: white;\n  /* 标题文字颜色为白色 */\n  padding: 15px;\n  /* 增加内边距 */\n  border-radius: 10px 10px 0 0;\n  /* 标题部分与对话框圆角匹配 */\n}\n\n.el-dialog__body {\n  padding: 20px;\n  /* 增加内容区域的内边距 */\n  max-height: 300px;\n  /* 限制内容区域最大高度 */\n  overflow-y: auto;\n  /* 当内容超出时增加滚动条 */\n}\n\n.el-dialog__footer {\n  text-align: center;\n  /* 底部居中对齐 */\n  padding: 15px;\n  /* 增加内边距 */\n  border-top: 1px solid #ddd;\n  /* 增加分隔线 */\n}\n</style>","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=ad0d8f68&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ad0d8f68\"]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue';\nimport '@/styles/reset.css'\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\n\nconst app = createApp(App);\napp.use(ElementPlus);\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktype_word\"] = self[\"webpackChunktype_word\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5471); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["inputValue","ref","currentChineseMeaning","wordDictionary","usedWords","fileInput","isFileUploaded","wrongCount","recordedWords","inputBoxVisible","progressWidth","totalWords","completedWords","downloadButtonVisible","showMode","sortedWordList","dialogVisible","currentWordBook","handleFileUpload","value","click","handleFileSelected","e","file","target","files","reader","FileReader","onload","event","content","result","lines","split","dictionary","forEach","line","word","meaning","push","trim","length","sortWordList","showRandomWord","readAsText","words","slice","sort","Math","random","a","b","localeCompare","handleEndClick","ElMessage","message","type","duration","completedNum","errors","accuracy","toFixed","grouping","currentItem","shift","updateProgressBar","console","log","handleInput","checkWord","inputWord","find","item","toLowerCase","document","querySelector","style","color","englishInput","classList","add","setTimeout","remove","dropdownRef","toggleDropdown","showDropdownOnHover","show","hideDropdownOnLeave","hide","downloadWords","map","join","blob","Blob","url","URL","createObjectURL","createElement","href","download","body","appendChild","removeChild","revokeObjectURL","progressPercent","handleShowModeChange","handleListItemClick","option","filePath","fetch","then","response","text","catch","showDialog","keydownListener","onMounted","addEventListener","defaultFile","key","activeElement","preventDefault","some","wordInfo","startsWith","nextTick","focus","onBeforeUnmount","removeEventListener","__exports__","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}